{{- range .Values.tritonServers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-{{ .name }}
  namespace: {{ $.Release.Namespace | default "default" }}
  labels:
    app: triton-{{ .name }}
    chart: {{ template "tritoninferenceserver.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: triton-{{ .name }}
  template:
    metadata:
      labels:
        app: triton-{{ .name }}
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        {{- if $.Values.gitSync.enabled }}
        - name: git-sync
          image: {{ $.Values.gitSync.image }}
          env:
            {{- toYaml $.Values.gitSync.env | nindent 12 }}
          volumeMounts:
            - name: model-repo
              mountPath: /git
          securityContext:
            runAsUser: 1000
        {{- end }}
        - name: triton
          image: {{ .image }}
          resources:
            {{- if .resources }}
            {{- toYaml .resources | nindent 12 }}
            {{- end }}
          args: ["tritonserver", "--model-repository={{ .model.repository }}", "--model-control-mode=explicit", "--load-model={{ .model.name }}"]
          volumeMounts:
            - name: model-repo
              mountPath: /git
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8001
              name: grpc
            - containerPort: 8002
              name: metrics
          securityContext:
            runAsUser: 1000
      volumes:
        - name: model-repo
          emptyDir: {}
      {{- if .imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .imagePullSecrets | nindent 12 }}
      {{- end }}
---
{{- end }}
